using Test,C2RF

####Taking a very simple example

R = [ -1   1   1   1   1   1   1   1  -1  -1
  1  -1   1  -1   1   1   1  -1  -1   1
 -1   1  -1  -1   1  -1  -1  -1  -1  -1
  1   1   1   1  -1   1  -1   1  -1   1
  1  -1  -1   1   1  -1   1  -1  -1  -1
 -1   1   1  -1  -1  -1  -1   1  -1  -1
  1  -1   1   1   1  -1  -1   1   1   1
 -1  -1  -1  -1   1   1   1  -1  -1  -1
  1   1   1  -1   1  -1   1   1   1   1
  1   1   1   1   1   1  -1  -1   1  -1
  1   1  -1  -1   1  -1   1  -1   1  -1
  1   1  -1   1  -1   1  -1   1  -1   1
 -1   1  -1  -1  -1   1  -1  -1  -1  -1
 -1  -1   1  -1  -1   1   1  -1   1  -1
 -1   1  -1  -1  -1   1   1   1  -1   1
 -1   1   1  -1   1  -1  -1   1   1   1
 -1   1  -1  -1   1  -1   1  -1   1  -1
  1  -1  -1   1   1  -1   1  -1   1   1
 -1   1  -1  -1   1  -1  -1   1   1  -1
 -1   1   1  -1   1  -1   1  -1   1   1
  1  -1   1  -1  -1  -1  -1  -1   1  -1
 -1  -1  -1  -1   1  -1   1  -1  -1  -1
 -1   1   1   1  -1  -1   1   1  -1   1
  1  -1   1   1   1   1  -1  -1   1   1
 -1  -1  -1   1   1   1  -1   1   1   1]

λ = 10

ℓ = 1

u = 100

maxtime = 600

solver = 0

out1 = C2RFf(R, λ, ℓ, u, maxtime,solver)

out2 =  pC2RFmain(R, λ, ℓ, u, maxtime,solver)

